<?xml version="1.0"?>

<project name="Build AppX" default="build" basedir=".">

	<description>Client-side ANT Build File for AppX Application</description>

	<property name="project.title" value="AppX"/>
	<property name="project.app" value="appx"/>
	<property name="project.lng" value="ru"/>
	<property name="project.dir" value="./project"/>
	<property name="project.res" value="${project.dir}/res"/>

	<property name="res.css.sourceDir" value="${project.res}/css.txsrc"/>
	<property name="res.css.dir" value="${project.res}/css"/>
	<property name="res.js.sourceDir" value="${project.res}/js.txsrc"/>
	<property name="res.js.dir" value="${project.res}/js"/>

	<property name="build.dir" value="./build"/>
	<property name="build.shareDir" value="./build"/>

	<target name="build" depends="checkJSFiles, concatenateJSFiles, concatenateCSSFiles, removeSassDebugInfo, minifyJSFiles, minifyCSSFiles, checkPreviousBuild, erasePreviousBuild, copyBuild, replaceTokens, shareBuild">
		<echo>Done.</echo>
	</target>

	<target name="checkJSFiles">
		<echo>Checking JavaScript Files with JSLint</echo>
		<pathconvert pathsep=" " property="jsfiles">
			<fileset dir="${res.js.sourceDir}">
				<include name="*.js"/>
			</fileset>
		</pathconvert>
		<exec dir="${res.js.sourceDir}" executable="java" failonerror="true">
			<arg line="-jar ${tools.rhino} ${tools.jslint} ${jsfiles}"/>
		</exec>
	</target>

	<target name="concatenateJSFiles" depends="checkJSFiles">
		<echo>Concatenating JavaScript Files</echo>
		<concat destfile="${res.js.dir}/${project.app}.js">
			<filelist dir="${res.js.sourceDir}">
				<file name="app.utilites.js"/>
				<file name="app.screens.js"/>
				<file name="app.routes.js"/>
				<file name="app.js"/>
			</filelist>
		</concat>
	</target>

	<target name="concatenateCSSFiles">
		<echo>Concatenating CSS Files</echo>
		<concat destfile="${res.css.dir}/styles.css">
			<filelist dir="${res.css.sourceDir}">
				<file name="reset.css"/>
				<file name="typographics.css"/>
			</filelist>
			<fileset dir="${res.css.sourceDir}">
				<include name="*.css"/>
				<exclude name="reset.css"/>
				<exclude name="typographics.css"/>
				<exclude name="txdebug.*.css"/>
				<exclude name="txdemo.*.css"/>
			</fileset>
		</concat>
	</target>

	<target name="removeSassDebugInfo" depends="concatenateCSSFiles">
		<echo>Removing Sass Debug Info from CSS Files</echo>
		<replaceregexp match="/\*@ sourceMappingURL(.|\t|\s|\n)*?\*\/|.media \-sass\-debug\-info(.|\t|\s|\n)*?\}\}" replace="" flags="g">
			<fileset dir="${res.css.dir}">
				<include name="*.css"/>
			</fileset>
		</replaceregexp>
	</target>

	<target name="minifyJSFiles" depends="concatenateJSFiles">
        <echo>Minifying JavaScript Files</echo>
        <apply executable="java" parallel="false" dest="${res.js.dir}">
            <fileset dir="${res.js.dir}">
            	<include name="*.js"/>
            	<exclude name="*.min.js"/>
            </fileset>
            <arg line="-jar"/>
            <arg path="${tools.yuicompressor}"/>
            <arg line="--line-break 5000"/>
            <srcfile/>
            <arg line="-o"/>
            <mapper type="glob" from="*.js" to="*.min.js"/>
            <targetfile/>
        </apply>
    </target>

	<target name="minifyCSSFiles" depends="concatenateCSSFiles">
        <echo>Minifying CSS Files</echo>
        <apply executable="java" parallel="false" dest="${res.css.dir}">
            <fileset dir="${res.css.dir}">
				<include name="*.css"/>
				<exclude name="*.min.css"/>
            </fileset>
            <arg line="-jar"/>
            <arg path="${tools.yuicompressor}"/>
            <arg line="--line-break 5000"/>
            <srcfile/>
            <arg line="-o"/>
            <mapper type="glob" from="*.css" to="*.min.css"/>
            <targetfile/>
        </apply>
    </target>

	<target name="checkPreviousBuild">
		<echo>Cheking if Previous Build Exists</echo>
		<available file="${build.dir}" type="dir" property="build.exists"/>
	</target>

	<target name="erasePreviousBuild" depends="checkPreviousBuild" if="build.exists">
		<echo>Erasing Previous Build</echo>
		<delete includeemptydirs="true">
			<fileset dir="${build.dir}"/>
		</delete>
	</target>

	<target name="copyBuild">
		<echo>Copying Current Build</echo>
		<mkdir dir="${build.dir}"/>
		<copy todir="${build.dir}" includeEmptyDirs="false">
			<fileset dir="${project.dir}">
				<include name="audio/"/>
				<include name="images/"/>
				<include name="flash/"/>
				<include name="video/"/>
				<include name="*.html"/>
				<include name="res/"/>
				<exclude name="**/txex.*.*"/>
				<exclude name="**/txdebug.*.*"/>
				<exclude name="**/txexample.*.*"/>
				<exclude name="res/*.txsrc/"/>
			</fileset>
			<fileset dir="./sources/project meta images" includes="">
				<include name="*.ico"/>
				<include name="*.png"/>
				<include name="*.jpg"/>
				<include name="*.gif"/>
			</fileset>
		</copy>
	</target>

	<target name="replaceTokens">
		<echo>Replacing Tokens</echo>
		<replaceregexp match=".!-- CSS -->(.|\t|\s|\n)*?!-- \/CSS -->" replace="@CSSGOESHERE!">
			<fileset dir="${build.dir}">
				<include name="*.html"/>
			</fileset>
		</replaceregexp>
		<replaceregexp match=".!-- JS -->(.|\t|\s|\n)*?!-- \/JS -->" replace="@JSGOESHERE!">
			<fileset dir="${build.dir}">
				<include name="*.html"/>
			</fileset>
		</replaceregexp>
		<replace>
			<fileset dir="${build.dir}">
				<include name="*.html"/>
			</fileset>
			<replacefilter>
				<replacetoken>@CSSGOESHERE!</replacetoken>
				<replacevalue><![CDATA[<link rel="stylesheet" type="text/css" href="res/css/styles.min.css">]]></replacevalue>
			</replacefilter>
			<replacefilter>
				<replacetoken>@JSGOESHERE!</replacetoken>
				<replacevalue><![CDATA[<script type="text/javascript" src="res/js/@APPJSFILEGOESHERE!.min.js"></script>]]></replacevalue>
			</replacefilter>
			<replacefilter token="@TITLEGOESHERE!" value="${project.title}" />
			<replacefilter token="@LANGUAGEGOESHERE!" value="${project.lng}" />
			<replacefilter token="@APPJSFILEGOESHERE!" value="${project.app}" />
		</replace>
	</target>

	<target name="shareBuild" if="build.share">
		<echo>Sharing Current Build</echo>
		<copy todir="${build.shareDir}">
			<fileset dir="${build.dir}"/>
		</copy>
	</target>

</project>