=tx-selection-style($bg: #00f, $cl: #fff, $sw: none)
	::-webkit-selection 
		color: $cl
		background: $bg
		@if $sw != none
			text-shadow: $sw
	::-moz-selection 
		color: $cl
		background: $bg
		@if $sw != none
			text-shadow: $sw
	::selection 
		color: $cl
		background: $bg
		@if $sw != none
			text-shadow: $sw



=tx-placeholder($cl: #999, $fz: 1em, $fw: normal)
	&::-webkit-input-placeholder
		color: $cl
		font-size: $fz
		font-weight: $fw

	&:-moz-placeholder
		color: $cl
		font-size: $fz
		font-weight: $fw

	&::-moz-placeholder
		color: $cl
		font-size: $fz
		font-weight: $fw

	&:-ms-input-placeholder
		color: $cl
		font-size: $fz
		font-weight: $fw



=tx-set-boundaries($minw: 980px, $maxw: 1400px, $center: true, $minh: 100%)
	@if $minw != none or $minw != 0
		min-width: $minw
	@if $maxw != none or $maxw != 0
		max-width: $maxw
	@if $minh != none or $minh != 0
		min-height: $minh
	@if $center
		margin: 0 auto



=tx-rhythm($leader: 0, $trailer: 0, $fz: $base-font-size, $mrgt: 0, $mlft: 0)
	@if $leader == $trailer
		@if $mrgt == $mlft
			margin: rhythm($leader, $fz) $mrgt
		@else
			margin: rhythm($leader, $fz) $mrgt rhythm($trailer, $fz) $mlft
	@else
		@if $mrgt == $mlft
			margin: rhythm($leader, $fz) $mrgt rhythm($trailer, $fz)
		@else
			margin: rhythm($leader, $fz) $mrgt rhythm($trailer, $fz) $mlft



=tx-rhythm-padding($padding-leader: 0, $padding-trailer: 0, $fz: $base-font-size, $prgt: 0, $plft: 0)
	@if $padding-leader == $padding-trailer
		@if $prgt == $plft
			padding: rhythm($padding-leader, $fz) $prgt
		@else
			padding: rhythm($padding-leader, $fz) $prgt rhythm($padding-trailer, $fz) $plft
	@else
		@if $prgt == $plft
			padding: rhythm($padding-leader, $fz) $prgt rhythm($padding-trailer, $fz)
		@else
			padding: rhythm($padding-leader, $fz) $prgt rhythm($padding-trailer, $fz) $plft



=tx-table-borders($wdt: 1px, $lines: 1, $fz: $base-font-size, $bstyle: solid, $bcolor: #000, $prgt: .5em, $plft: .5em)
	$calculated-width: $font-unit * $wdt / $fz
	$calculated-vertical-padding: rhythm($lines, $fz, $offset: $wdt)
	border: $wdt $bstyle $bcolor
	@if $lines != 0
		@if $prgt == $plft and $prgt != 0
			padding: $calculated-vertical-padding $prgt ($calculated-vertical-padding + $calculated-width)
		@else
			padding: $calculated-vertical-padding $prgt ($calculated-vertical-padding + $calculated-width) $plft



=tx-grid-height($lines: 1, $lh: true, $pd: false)
	@if $pd
		padding: $lines * $base-line-height 0 0
	@else
		height: $lines * $base-line-height
	@if $lh
		line-height: $lines * $base-line-height



=tx-form-height($lines: 1, $brdw: 1px, $fz: $base-font-size)
	height: rhythm($lines, $fz, $offset: 2 * $brdw)



=tx-inline-block($ie: $tx-ie)
	@if not $ie
		display: -moz-inline-box
		display: inline-block
	@else
		display: inline
		zoom: 1



=tx-pseudo($dsp: block, $pos: absolute, $cnt: "", $ie: $tx-ie)
	@if $dsp == "inline-block"
		+tx-inline-block
	@else
		display: $dsp
	@if $cnt != ""
		@if $cnt and not $ie
			content: "" + $cnt
	@else
		@if not $ie
			content: ""
	position: $pos



=tx-pseudo-ie($before: true, $after: true, $class: "", $beforeContent: "", $afterContent: "")
	$beforeClass: ieBefore + $class
	$afterClass: ieAfter + $class
	@if $before and $after
		zoom: unquote("expression(this.runtimeStyle.zoom = 1, insertAdjacentHTML('afterBegin', '<i class=\"" + $beforeClass + "\">" + $beforeContent + "</i>'), insertAdjacentHTML('beforeEnd', '<i class=\"" + $afterClass + "\">" + $afterContent + "</i>'))")
	@else if $before
		zoom: unquote("expression(this.runtimeStyle.zoom = 1, insertAdjacentHTML('afterBegin', '<i class=\"" + $beforeClass + "\">" + $beforeContent + "</i>'))")
	@else
		zoom: unquote("expression(this.runtimeStyle.zoom = 1, insertAdjacentHTML('beforeEnd', '<i class=\"" + $afterClass + "\">" + $afterContent + "</i>'))")